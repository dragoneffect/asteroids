
CC = g++

OBJ = $(CC) -Wall -g -DSFML_STATIC -I thirdparty\SFML\include -c $< -o $@ $(CXXFLAGS)

CXXFLAGS= -L thirdparty\SFML\lib -lsfml-graphics-s-d -lsfml-window-s-d -lsfml-system-s-d -lopengl32 -lfreetype -ljpeg -lwinmm -lgdi32 -lsfml-audio-d

GFLAGS = -g -Wall -Wextra -pthread
GTEST_DIR = thirdparty/googletest
CPPFLAGS += -isystem $(GTEST_DIR)/include
TESTS = bin/asteroids-test
GTEST_HEADERS = $(GTEST_DIR)/include/gtest/*.h \
                $(GTEST_DIR)/include/gtest/internal/*.h
GTEST_SRCS_ = $(GTEST_DIR)/src/*.cc $(GTEST_DIR)/src/*.h $(GTEST_HEADERS)

default: asteroids

test: bin/asteroids-test

asteroids: build/main.o build/menu.o build/interface.o build/funcs.o
		mkdir -p bin
		$(CC) $^ -o $@ $(CXXFLAGS)

build/main.o: src/main.cpp
		mkdir -p build
		$(OBJ) -std=c++11

build/menu.o: src/menu.cpp
		$(OBJ)

build/interface.o: src/interface.cpp
		$(OBJ) -std=c++11

build/funcs.o: src/funcs.cpp
		$(OBJ) -std=c++11
		
bin/asteroids-test : build/funcs.o build/test/main.o gtest_main.a
		mkdir -p bin
		$(CC) $^ -o $@ $(CPPFLAGS) $(CXXFLAGS) $(GFLAGS) -lpthread
		
build/test/main.o : test/main.cc
	mkdir -p build/test
	$(OBJ) -std=c++11 $(CPPFLAGS)

gtest-all.o: $(GTEST_SRCS_)
	$(CC) $(CPPFLAGS) -I$(GTEST_DIR) $(GFLAGS) -c \
            $(GTEST_DIR)/src/gtest-all.cc

gtest_main.o: $(GTEST_SRCS_)
	$(CC) $(CPPFLAGS) -I$(GTEST_DIR) $(GFLAGS) -c \
            $(GTEST_DIR)/src/gtest_main.cc

gtest.a: gtest-all.o
	$(AR) $(ARFLAGS) $@ $^

gtest_main.a: gtest-all.o gtest_main.o
	$(AR) $(ARFLAGS) $@ $^

clean:
		rm -f build/*.o
		rm -f build/test/*.o
		rm build
